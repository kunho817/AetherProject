import {
  __commonJS,
  __toESM
} from "./chunk-5WRI5ZAA.js";

// node_modules/pad-end/index.js
var require_pad_end = __commonJS({
  "node_modules/pad-end/index.js"(exports, module) {
    "use strict";
    module.exports = function(string, maxLength, fillString) {
      if (string == null || maxLength == null) {
        return string;
      }
      var result = String(string);
      var targetLen = typeof maxLength === "number" ? maxLength : parseInt(maxLength, 10);
      if (isNaN(targetLen) || !isFinite(targetLen)) {
        return result;
      }
      var length = result.length;
      if (length >= targetLen) {
        return result;
      }
      var filled = fillString == null ? "" : String(fillString);
      if (filled === "") {
        filled = " ";
      }
      var fillLen = targetLen - length;
      while (filled.length < fillLen) {
        filled += filled;
      }
      var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;
      return result + truncated;
    };
  }
});

// node_modules/break_infinity.js/dist/break_infinity.esm.js
var import_pad_end = __toESM(require_pad_end());
var n = 9e15;
var e = function() {
  for (var t2 = [], n2 = -323; n2 <= 308; n2++) t2.push(Number("1e" + n2));
  return function(n3) {
    return t2[n3 + 323];
  };
}();
var r = function(t2) {
  return t2 instanceof a ? t2 : new a(t2);
};
var i = function(t2, n2) {
  return new a().fromMantissaExponent(t2, n2);
};
var o = function(t2, n2) {
  return new a().fromMantissaExponent_noNormalize(t2, n2);
};
function u(t2, n2, e2, r2) {
  var i2 = n2.mul(e2.pow(r2));
  return a.floor(t2.div(i2).mul(e2.sub(1)).add(1).log10() / e2.log10());
}
function s(t2, n2, e2, r2) {
  return n2.mul(e2.pow(r2)).mul(a.sub(1, e2.pow(t2))).div(a.sub(1, e2));
}
var a = function() {
  function a2(t2) {
    this.mantissa = NaN, this.exponent = NaN, void 0 === t2 ? (this.m = 0, this.e = 0) : t2 instanceof a2 ? this.fromDecimal(t2) : "number" == typeof t2 ? this.fromNumber(t2) : this.fromString(t2);
  }
  return Object.defineProperty(a2.prototype, "m", { get: function() {
    return this.mantissa;
  }, set: function(t2) {
    this.mantissa = t2;
  }, enumerable: false, configurable: true }), Object.defineProperty(a2.prototype, "e", { get: function() {
    return this.exponent;
  }, set: function(t2) {
    this.exponent = t2;
  }, enumerable: false, configurable: true }), Object.defineProperty(a2.prototype, "s", { get: function() {
    return this.sign();
  }, set: function(t2) {
    if (0 === t2) return this.e = 0, void (this.m = 0);
    this.sgn() !== t2 && (this.m = -this.m);
  }, enumerable: false, configurable: true }), a2.fromMantissaExponent = function(t2, n2) {
    return new a2().fromMantissaExponent(t2, n2);
  }, a2.fromMantissaExponent_noNormalize = function(t2, n2) {
    return new a2().fromMantissaExponent_noNormalize(t2, n2);
  }, a2.fromDecimal = function(t2) {
    return new a2().fromDecimal(t2);
  }, a2.fromNumber = function(t2) {
    return new a2().fromNumber(t2);
  }, a2.fromString = function(t2) {
    return new a2().fromString(t2);
  }, a2.fromValue = function(t2) {
    return new a2().fromValue(t2);
  }, a2.fromValue_noAlloc = function(t2) {
    return t2 instanceof a2 ? t2 : new a2(t2);
  }, a2.abs = function(t2) {
    return r(t2).abs();
  }, a2.neg = function(t2) {
    return r(t2).neg();
  }, a2.negate = function(t2) {
    return r(t2).neg();
  }, a2.negated = function(t2) {
    return r(t2).neg();
  }, a2.sign = function(t2) {
    return r(t2).sign();
  }, a2.sgn = function(t2) {
    return r(t2).sign();
  }, a2.round = function(t2) {
    return r(t2).round();
  }, a2.floor = function(t2) {
    return r(t2).floor();
  }, a2.ceil = function(t2) {
    return r(t2).ceil();
  }, a2.trunc = function(t2) {
    return r(t2).trunc();
  }, a2.add = function(t2, n2) {
    return r(t2).add(n2);
  }, a2.plus = function(t2, n2) {
    return r(t2).add(n2);
  }, a2.sub = function(t2, n2) {
    return r(t2).sub(n2);
  }, a2.subtract = function(t2, n2) {
    return r(t2).sub(n2);
  }, a2.minus = function(t2, n2) {
    return r(t2).sub(n2);
  }, a2.mul = function(t2, n2) {
    return r(t2).mul(n2);
  }, a2.multiply = function(t2, n2) {
    return r(t2).mul(n2);
  }, a2.times = function(t2, n2) {
    return r(t2).mul(n2);
  }, a2.div = function(t2, n2) {
    return r(t2).div(n2);
  }, a2.divide = function(t2, n2) {
    return r(t2).div(n2);
  }, a2.recip = function(t2) {
    return r(t2).recip();
  }, a2.reciprocal = function(t2) {
    return r(t2).recip();
  }, a2.reciprocate = function(t2) {
    return r(t2).reciprocate();
  }, a2.cmp = function(t2, n2) {
    return r(t2).cmp(n2);
  }, a2.compare = function(t2, n2) {
    return r(t2).cmp(n2);
  }, a2.eq = function(t2, n2) {
    return r(t2).eq(n2);
  }, a2.equals = function(t2, n2) {
    return r(t2).eq(n2);
  }, a2.neq = function(t2, n2) {
    return r(t2).neq(n2);
  }, a2.notEquals = function(t2, n2) {
    return r(t2).notEquals(n2);
  }, a2.lt = function(t2, n2) {
    return r(t2).lt(n2);
  }, a2.lte = function(t2, n2) {
    return r(t2).lte(n2);
  }, a2.gt = function(t2, n2) {
    return r(t2).gt(n2);
  }, a2.gte = function(t2, n2) {
    return r(t2).gte(n2);
  }, a2.max = function(t2, n2) {
    return r(t2).max(n2);
  }, a2.min = function(t2, n2) {
    return r(t2).min(n2);
  }, a2.clamp = function(t2, n2, e2) {
    return r(t2).clamp(n2, e2);
  }, a2.clampMin = function(t2, n2) {
    return r(t2).clampMin(n2);
  }, a2.clampMax = function(t2, n2) {
    return r(t2).clampMax(n2);
  }, a2.cmp_tolerance = function(t2, n2, e2) {
    return r(t2).cmp_tolerance(n2, e2);
  }, a2.compare_tolerance = function(t2, n2, e2) {
    return r(t2).cmp_tolerance(n2, e2);
  }, a2.eq_tolerance = function(t2, n2, e2) {
    return r(t2).eq_tolerance(n2, e2);
  }, a2.equals_tolerance = function(t2, n2, e2) {
    return r(t2).eq_tolerance(n2, e2);
  }, a2.neq_tolerance = function(t2, n2, e2) {
    return r(t2).neq_tolerance(n2, e2);
  }, a2.notEquals_tolerance = function(t2, n2, e2) {
    return r(t2).notEquals_tolerance(n2, e2);
  }, a2.lt_tolerance = function(t2, n2, e2) {
    return r(t2).lt_tolerance(n2, e2);
  }, a2.lte_tolerance = function(t2, n2, e2) {
    return r(t2).lte_tolerance(n2, e2);
  }, a2.gt_tolerance = function(t2, n2, e2) {
    return r(t2).gt_tolerance(n2, e2);
  }, a2.gte_tolerance = function(t2, n2, e2) {
    return r(t2).gte_tolerance(n2, e2);
  }, a2.log10 = function(t2) {
    return r(t2).log10();
  }, a2.absLog10 = function(t2) {
    return r(t2).absLog10();
  }, a2.pLog10 = function(t2) {
    return r(t2).pLog10();
  }, a2.log = function(t2, n2) {
    return r(t2).log(n2);
  }, a2.log2 = function(t2) {
    return r(t2).log2();
  }, a2.ln = function(t2) {
    return r(t2).ln();
  }, a2.logarithm = function(t2, n2) {
    return r(t2).logarithm(n2);
  }, a2.pow10 = function(t2) {
    return Number.isInteger(t2) ? o(1, t2) : i(Math.pow(10, t2 % 1), Math.trunc(t2));
  }, a2.pow = function(t2, n2) {
    return "number" == typeof t2 && 10 === t2 && "number" == typeof n2 && Number.isInteger(n2) ? o(1, n2) : r(t2).pow(n2);
  }, a2.exp = function(t2) {
    return r(t2).exp();
  }, a2.sqr = function(t2) {
    return r(t2).sqr();
  }, a2.sqrt = function(t2) {
    return r(t2).sqrt();
  }, a2.cube = function(t2) {
    return r(t2).cube();
  }, a2.cbrt = function(t2) {
    return r(t2).cbrt();
  }, a2.dp = function(t2) {
    return r(t2).dp();
  }, a2.decimalPlaces = function(t2) {
    return r(t2).dp();
  }, a2.affordGeometricSeries = function(t2, n2, e2, i2) {
    return u(r(t2), r(n2), r(e2), i2);
  }, a2.sumGeometricSeries = function(t2, n2, e2, i2) {
    return s(t2, r(n2), r(e2), i2);
  }, a2.affordArithmeticSeries = function(t2, n2, e2, i2) {
    return function(t3, n3, e3, r2) {
      var i3 = n3.add(r2.mul(e3)).sub(e3.div(2)), o2 = i3.pow(2);
      return i3.neg().add(o2.add(e3.mul(t3).mul(2)).sqrt()).div(e3).floor();
    }(r(t2), r(n2), r(e2), r(i2));
  }, a2.sumArithmeticSeries = function(t2, n2, e2, i2) {
    return function(t3, n3, e3, r2) {
      var i3 = n3.add(r2.mul(e3));
      return t3.div(2).mul(i3.mul(2).plus(t3.sub(1).mul(e3)));
    }(r(t2), r(n2), r(e2), r(i2));
  }, a2.efficiencyOfPurchase = function(t2, n2, e2) {
    return function(t3, n3, e3) {
      return t3.div(n3).add(t3.div(e3));
    }(r(t2), r(n2), r(e2));
  }, a2.randomDecimalForTesting = function(t2) {
    if (20 * Math.random() < 1) return o(0, 0);
    var n2 = 10 * Math.random();
    10 * Math.random() < 1 && (n2 = Math.round(n2)), n2 *= Math.sign(2 * Math.random() - 1);
    var e2 = Math.floor(Math.random() * t2 * 2) - t2;
    return i(n2, e2);
  }, a2.prototype.normalize = function() {
    if (this.m >= 1 && this.m < 10) return this;
    if (0 === this.m) return this.m = 0, this.e = 0, this;
    var t2 = Math.floor(Math.log10(Math.abs(this.m)));
    return this.m = -324 === t2 ? 10 * this.m / 1e-323 : this.m / e(t2), this.e += t2, this;
  }, a2.prototype.fromMantissaExponent = function(t2, n2) {
    return isFinite(t2) && isFinite(n2) ? (this.m = t2, this.e = n2, this.normalize(), this) : (t2 = Number.NaN, n2 = Number.NaN, this);
  }, a2.prototype.fromMantissaExponent_noNormalize = function(t2, n2) {
    return this.m = t2, this.e = n2, this;
  }, a2.prototype.fromDecimal = function(t2) {
    return this.m = t2.m, this.e = t2.e, this;
  }, a2.prototype.fromNumber = function(t2) {
    return isNaN(t2) ? (this.m = Number.NaN, this.e = Number.NaN) : t2 === Number.POSITIVE_INFINITY ? (this.m = 1, this.e = n) : t2 === Number.NEGATIVE_INFINITY ? (this.m = -1, this.e = n) : 0 === t2 ? (this.m = 0, this.e = 0) : (this.e = Math.floor(Math.log10(Math.abs(t2))), this.m = -324 === this.e ? 10 * t2 / 1e-323 : t2 / e(this.e), this.normalize()), this;
  }, a2.prototype.fromString = function(t2) {
    if (-1 !== t2.indexOf("e")) {
      var n2 = t2.split("e");
      this.m = parseFloat(n2[0]), this.e = parseFloat(n2[1]), this.normalize();
    } else if ("NaN" === t2) this.m = Number.NaN, this.e = Number.NaN;
    else if (this.fromNumber(parseFloat(t2)), isNaN(this.m)) throw Error("[DecimalError] Invalid argument: " + t2);
    return this;
  }, a2.prototype.fromValue = function(t2) {
    return t2 instanceof a2 ? this.fromDecimal(t2) : "number" == typeof t2 ? this.fromNumber(t2) : "string" == typeof t2 ? this.fromString(t2) : (this.m = 0, this.e = 0, this);
  }, a2.prototype.toNumber = function() {
    if (!isFinite(this.e)) return Number.NaN;
    if (this.e > 308) return this.m > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
    if (this.e < -324) return 0;
    if (-324 === this.e) return this.m > 0 ? 5e-324 : -5e-324;
    var t2 = this.m * e(this.e);
    if (!isFinite(t2) || this.e < 0) return t2;
    var n2 = Math.round(t2);
    return Math.abs(n2 - t2) < 1e-10 ? n2 : t2;
  }, a2.prototype.mantissaWithDecimalPlaces = function(t2) {
    if (isNaN(this.m) || isNaN(this.e)) return Number.NaN;
    if (0 === this.m) return 0;
    var n2 = t2 + 1, e2 = Math.ceil(Math.log10(Math.abs(this.m))), r2 = Math.round(this.m * Math.pow(10, n2 - e2)) * Math.pow(10, e2 - n2);
    return parseFloat(r2.toFixed(Math.max(n2 - e2, 0)));
  }, a2.prototype.toString = function() {
    return isNaN(this.m) || isNaN(this.e) ? "NaN" : this.e >= n ? this.m > 0 ? "Infinity" : "-Infinity" : this.e <= -n || 0 === this.m ? "0" : this.e < 21 && this.e > -7 ? this.toNumber().toString() : this.m + "e" + (this.e >= 0 ? "+" : "") + this.e;
  }, a2.prototype.toExponential = function(e2) {
    if (isNaN(this.m) || isNaN(this.e)) return "NaN";
    if (this.e >= n) return this.m > 0 ? "Infinity" : "-Infinity";
    if (this.e <= -n || 0 === this.m) return "0" + (e2 > 0 ? (0, import_pad_end.default)(".", e2 + 1, "0") : "") + "e+0";
    if (this.e > -324 && this.e < 308) return this.toNumber().toExponential(e2);
    isFinite(e2) || (e2 = 17);
    var r2 = e2 + 1, i2 = Math.max(1, Math.ceil(Math.log10(Math.abs(this.m))));
    return (Math.round(this.m * Math.pow(10, r2 - i2)) * Math.pow(10, i2 - r2)).toFixed(Math.max(r2 - i2, 0)) + "e" + (this.e >= 0 ? "+" : "") + this.e;
  }, a2.prototype.toFixed = function(e2) {
    return isNaN(this.m) || isNaN(this.e) ? "NaN" : this.e >= n ? this.m > 0 ? "Infinity" : "-Infinity" : this.e <= -n || 0 === this.m ? "0" + (e2 > 0 ? (0, import_pad_end.default)(".", e2 + 1, "0") : "") : this.e >= 17 ? this.m.toString().replace(".", "").padEnd(this.e + 1, "0") + (e2 > 0 ? (0, import_pad_end.default)(".", e2 + 1, "0") : "") : this.toNumber().toFixed(e2);
  }, a2.prototype.toPrecision = function(t2) {
    return this.e <= -7 ? this.toExponential(t2 - 1) : t2 > this.e ? this.toFixed(t2 - this.e - 1) : this.toExponential(t2 - 1);
  }, a2.prototype.valueOf = function() {
    return this.toString();
  }, a2.prototype.toJSON = function() {
    return this.toString();
  }, a2.prototype.toStringWithDecimalPlaces = function(t2) {
    return this.toExponential(t2);
  }, a2.prototype.abs = function() {
    return o(Math.abs(this.m), this.e);
  }, a2.prototype.neg = function() {
    return o(-this.m, this.e);
  }, a2.prototype.negate = function() {
    return this.neg();
  }, a2.prototype.negated = function() {
    return this.neg();
  }, a2.prototype.sign = function() {
    return Math.sign(this.m);
  }, a2.prototype.sgn = function() {
    return this.sign();
  }, a2.prototype.round = function() {
    return this.e < -1 ? new a2(0) : this.e < 17 ? new a2(Math.round(this.toNumber())) : this;
  }, a2.prototype.floor = function() {
    return this.e < -1 ? Math.sign(this.m) >= 0 ? new a2(0) : new a2(-1) : this.e < 17 ? new a2(Math.floor(this.toNumber())) : this;
  }, a2.prototype.ceil = function() {
    return this.e < -1 ? Math.sign(this.m) > 0 ? new a2(1) : new a2(0) : this.e < 17 ? new a2(Math.ceil(this.toNumber())) : this;
  }, a2.prototype.trunc = function() {
    return this.e < 0 ? new a2(0) : this.e < 17 ? new a2(Math.trunc(this.toNumber())) : this;
  }, a2.prototype.add = function(t2) {
    var n2, o2, u2 = r(t2);
    if (0 === this.m) return u2;
    if (0 === u2.m) return this;
    if (this.e >= u2.e ? (n2 = this, o2 = u2) : (n2 = u2, o2 = this), n2.e - o2.e > 17) return n2;
    var s2 = Math.round(1e14 * n2.m + 1e14 * o2.m * e(o2.e - n2.e));
    return i(s2, n2.e - 14);
  }, a2.prototype.plus = function(t2) {
    return this.add(t2);
  }, a2.prototype.sub = function(t2) {
    return this.add(r(t2).neg());
  }, a2.prototype.subtract = function(t2) {
    return this.sub(t2);
  }, a2.prototype.minus = function(t2) {
    return this.sub(t2);
  }, a2.prototype.mul = function(t2) {
    if ("number" == typeof t2) return t2 < 1e307 && t2 > -1e307 ? i(this.m * t2, this.e) : i(1e-307 * this.m * t2, this.e + 307);
    var n2 = "string" == typeof t2 ? new a2(t2) : t2;
    return i(this.m * n2.m, this.e + n2.e);
  }, a2.prototype.multiply = function(t2) {
    return this.mul(t2);
  }, a2.prototype.times = function(t2) {
    return this.mul(t2);
  }, a2.prototype.div = function(t2) {
    return this.mul(r(t2).recip());
  }, a2.prototype.divide = function(t2) {
    return this.div(t2);
  }, a2.prototype.divideBy = function(t2) {
    return this.div(t2);
  }, a2.prototype.dividedBy = function(t2) {
    return this.div(t2);
  }, a2.prototype.recip = function() {
    return i(1 / this.m, -this.e);
  }, a2.prototype.reciprocal = function() {
    return this.recip();
  }, a2.prototype.reciprocate = function() {
    return this.recip();
  }, a2.prototype.cmp = function(t2) {
    var n2 = r(t2);
    if (0 === this.m) {
      if (0 === n2.m) return 0;
      if (n2.m < 0) return 1;
      if (n2.m > 0) return -1;
    }
    if (0 === n2.m) {
      if (this.m < 0) return -1;
      if (this.m > 0) return 1;
    }
    if (this.m > 0) return n2.m < 0 || this.e > n2.e ? 1 : this.e < n2.e ? -1 : this.m > n2.m ? 1 : this.m < n2.m ? -1 : 0;
    if (this.m < 0) return n2.m > 0 || this.e > n2.e ? -1 : this.e < n2.e || this.m > n2.m ? 1 : this.m < n2.m ? -1 : 0;
    throw Error("Unreachable code");
  }, a2.prototype.compare = function(t2) {
    return this.cmp(t2);
  }, a2.prototype.eq = function(t2) {
    var n2 = r(t2);
    return this.e === n2.e && this.m === n2.m;
  }, a2.prototype.equals = function(t2) {
    return this.eq(t2);
  }, a2.prototype.neq = function(t2) {
    return !this.eq(t2);
  }, a2.prototype.notEquals = function(t2) {
    return this.neq(t2);
  }, a2.prototype.lt = function(t2) {
    var n2 = r(t2);
    return 0 === this.m ? n2.m > 0 : 0 === n2.m ? this.m <= 0 : this.e === n2.e ? this.m < n2.m : this.m > 0 ? n2.m > 0 && this.e < n2.e : n2.m > 0 || this.e > n2.e;
  }, a2.prototype.lte = function(t2) {
    return !this.gt(t2);
  }, a2.prototype.gt = function(t2) {
    var n2 = r(t2);
    return 0 === this.m ? n2.m < 0 : 0 === n2.m ? this.m > 0 : this.e === n2.e ? this.m > n2.m : this.m > 0 ? n2.m < 0 || this.e > n2.e : n2.m < 0 && this.e < n2.e;
  }, a2.prototype.gte = function(t2) {
    return !this.lt(t2);
  }, a2.prototype.max = function(t2) {
    var n2 = r(t2);
    return this.lt(n2) ? n2 : this;
  }, a2.prototype.min = function(t2) {
    var n2 = r(t2);
    return this.gt(n2) ? n2 : this;
  }, a2.prototype.clamp = function(t2, n2) {
    return this.max(t2).min(n2);
  }, a2.prototype.clampMin = function(t2) {
    return this.max(t2);
  }, a2.prototype.clampMax = function(t2) {
    return this.min(t2);
  }, a2.prototype.cmp_tolerance = function(t2, n2) {
    var e2 = r(t2);
    return this.eq_tolerance(e2, n2) ? 0 : this.cmp(e2);
  }, a2.prototype.compare_tolerance = function(t2, n2) {
    return this.cmp_tolerance(t2, n2);
  }, a2.prototype.eq_tolerance = function(t2, n2) {
    var e2 = r(t2);
    return a2.lte(this.sub(e2).abs(), a2.max(this.abs(), e2.abs()).mul(n2));
  }, a2.prototype.equals_tolerance = function(t2, n2) {
    return this.eq_tolerance(t2, n2);
  }, a2.prototype.neq_tolerance = function(t2, n2) {
    return !this.eq_tolerance(t2, n2);
  }, a2.prototype.notEquals_tolerance = function(t2, n2) {
    return this.neq_tolerance(t2, n2);
  }, a2.prototype.lt_tolerance = function(t2, n2) {
    var e2 = r(t2);
    return !this.eq_tolerance(e2, n2) && this.lt(e2);
  }, a2.prototype.lte_tolerance = function(t2, n2) {
    var e2 = r(t2);
    return this.eq_tolerance(e2, n2) || this.lt(e2);
  }, a2.prototype.gt_tolerance = function(t2, n2) {
    var e2 = r(t2);
    return !this.eq_tolerance(e2, n2) && this.gt(e2);
  }, a2.prototype.gte_tolerance = function(t2, n2) {
    var e2 = r(t2);
    return this.eq_tolerance(e2, n2) || this.gt(e2);
  }, a2.prototype.log10 = function() {
    return this.e + Math.log10(this.m);
  }, a2.prototype.absLog10 = function() {
    return this.e + Math.log10(Math.abs(this.m));
  }, a2.prototype.pLog10 = function() {
    return this.m <= 0 || this.e < 0 ? 0 : this.log10();
  }, a2.prototype.log = function(t2) {
    return Math.LN10 / Math.log(t2) * this.log10();
  }, a2.prototype.log2 = function() {
    return 3.321928094887362 * this.log10();
  }, a2.prototype.ln = function() {
    return 2.302585092994045 * this.log10();
  }, a2.prototype.logarithm = function(t2) {
    return this.log(t2);
  }, a2.prototype.pow = function(t2) {
    var n2, e2 = t2 instanceof a2 ? t2.toNumber() : t2, r2 = this.e * e2;
    if (Number.isSafeInteger(r2) && (n2 = Math.pow(this.m, e2), isFinite(n2) && 0 !== n2)) return i(n2, r2);
    var o2 = Math.trunc(r2), u2 = r2 - o2;
    if (n2 = Math.pow(10, e2 * Math.log10(this.m) + u2), isFinite(n2) && 0 !== n2) return i(n2, o2);
    var s2 = a2.pow10(e2 * this.absLog10());
    return -1 === this.sign() ? 1 === Math.abs(e2 % 2) ? s2.neg() : 0 === Math.abs(e2 % 2) ? s2 : new a2(Number.NaN) : s2;
  }, a2.prototype.pow_base = function(t2) {
    return r(t2).pow(this);
  }, a2.prototype.factorial = function() {
    var t2 = this.toNumber() + 1;
    return a2.pow(t2 / Math.E * Math.sqrt(t2 * Math.sinh(1 / t2) + 1 / (810 * Math.pow(t2, 6))), t2).mul(Math.sqrt(2 * Math.PI / t2));
  }, a2.prototype.exp = function() {
    var t2 = this.toNumber();
    return -706 < t2 && t2 < 709 ? a2.fromNumber(Math.exp(t2)) : a2.pow(Math.E, t2);
  }, a2.prototype.sqr = function() {
    return i(Math.pow(this.m, 2), 2 * this.e);
  }, a2.prototype.sqrt = function() {
    return this.m < 0 ? new a2(Number.NaN) : this.e % 2 != 0 ? i(3.16227766016838 * Math.sqrt(this.m), Math.floor(this.e / 2)) : i(Math.sqrt(this.m), Math.floor(this.e / 2));
  }, a2.prototype.cube = function() {
    return i(Math.pow(this.m, 3), 3 * this.e);
  }, a2.prototype.cbrt = function() {
    var t2 = 1, n2 = this.m;
    n2 < 0 && (t2 = -1, n2 = -n2);
    var e2 = t2 * Math.pow(n2, 1 / 3), r2 = this.e % 3;
    return i(1 === r2 || -1 === r2 ? 2.154434690031883 * e2 : 0 !== r2 ? 4.641588833612778 * e2 : e2, Math.floor(this.e / 3));
  }, a2.prototype.sinh = function() {
    return this.exp().sub(this.negate().exp()).div(2);
  }, a2.prototype.cosh = function() {
    return this.exp().add(this.negate().exp()).div(2);
  }, a2.prototype.tanh = function() {
    return this.sinh().div(this.cosh());
  }, a2.prototype.asinh = function() {
    return a2.ln(this.add(this.sqr().add(1).sqrt()));
  }, a2.prototype.acosh = function() {
    return a2.ln(this.add(this.sqr().sub(1).sqrt()));
  }, a2.prototype.atanh = function() {
    return this.abs().gte(1) ? Number.NaN : a2.ln(this.add(1).div(new a2(1).sub(this))) / 2;
  }, a2.prototype.ascensionPenalty = function(t2) {
    return 0 === t2 ? this : this.pow(Math.pow(10, -t2));
  }, a2.prototype.egg = function() {
    return this.add(9);
  }, a2.prototype.lessThanOrEqualTo = function(t2) {
    return this.cmp(t2) < 1;
  }, a2.prototype.lessThan = function(t2) {
    return this.cmp(t2) < 0;
  }, a2.prototype.greaterThanOrEqualTo = function(t2) {
    return this.cmp(t2) > -1;
  }, a2.prototype.greaterThan = function(t2) {
    return this.cmp(t2) > 0;
  }, a2.prototype.decimalPlaces = function() {
    return this.dp();
  }, a2.prototype.dp = function() {
    if (!isFinite(this.mantissa)) return NaN;
    if (this.exponent >= 17) return 0;
    for (var t2 = this.mantissa, n2 = -this.exponent, e2 = 1; Math.abs(Math.round(t2 * e2) / e2 - t2) > 1e-10; ) e2 *= 10, n2++;
    return n2 > 0 ? n2 : 0;
  }, Object.defineProperty(a2, "MAX_VALUE", { get: function() {
    return h;
  }, enumerable: false, configurable: true }), Object.defineProperty(a2, "MIN_VALUE", { get: function() {
    return c;
  }, enumerable: false, configurable: true }), Object.defineProperty(a2, "NUMBER_MAX_VALUE", { get: function() {
    return p;
  }, enumerable: false, configurable: true }), Object.defineProperty(a2, "NUMBER_MIN_VALUE", { get: function() {
    return f;
  }, enumerable: false, configurable: true }), a2;
}();
var h = o(1, n);
var c = o(1, -n);
var p = r(Number.MAX_VALUE);
var f = r(Number.MIN_VALUE);
var break_infinity_esm_default = a;
export {
  break_infinity_esm_default as default
};
//# sourceMappingURL=break_infinity__js.js.map
